// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gitpod
{
    public static class GetOrganization
    {
        /// <summary>
        /// GetOrganization gets the Organization information
        /// </summary>
        public static Task<GetOrganizationResult> InvokeAsync(GetOrganizationArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationResult>("gitpod:index:getOrganization", args ?? new GetOrganizationArgs(), options.WithDefaults());

        /// <summary>
        /// GetOrganization gets the Organization information
        /// </summary>
        public static Output<GetOrganizationResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationResult>("gitpod:index:getOrganization", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class GetOrganizationArgs : global::Pulumi.InvokeArgs
    {
        public GetOrganizationArgs()
        {
        }
        public static new GetOrganizationArgs Empty => new GetOrganizationArgs();
    }


    [OutputType]
    public sealed class GetOrganizationResult
    {
        /// <summary>
        /// Name of the organization created
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Id of the organization
        /// </summary>
        public readonly string Org_id;
        /// <summary>
        /// Slug of the organization
        /// </summary>
        public readonly string Slug;

        [OutputConstructor]
        private GetOrganizationResult(
            string name,

            string org_id,

            string slug)
        {
            Name = name;
            Org_id = org_id;
            Slug = slug;
        }
    }
}
