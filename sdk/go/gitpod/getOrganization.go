// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gitpod

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-gitpod/sdk/go/gitpod/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// GetOrganization gets the Organization information
func LookupOrganization(ctx *pulumi.Context, args *LookupOrganizationArgs, opts ...pulumi.InvokeOption) (*LookupOrganizationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupOrganizationResult
	err := ctx.Invoke("gitpod:index:getOrganization", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// Id of the organization
type LookupOrganizationArgs struct {
}

type LookupOrganizationResult struct {
	// Name of the organization created
	Name string `pulumi:"name"`
	// Id of the organization
	Org_id string `pulumi:"org_id"`
	// Slug of the organization
	Slug string `pulumi:"slug"`
}

func LookupOrganizationOutput(ctx *pulumi.Context, args LookupOrganizationOutputArgs, opts ...pulumi.InvokeOption) LookupOrganizationResultOutput {
	outputResult := pulumix.ApplyErr[*LookupOrganizationArgs](args.ToOutput(), func(plainArgs *LookupOrganizationArgs) (*LookupOrganizationResult, error) {
		return LookupOrganization(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupOrganizationResultOutput, *LookupOrganizationResult](outputResult)
}

// Id of the organization
type LookupOrganizationOutputArgs struct {
}

func (args LookupOrganizationOutputArgs) ToOutput() pulumix.Output[*LookupOrganizationArgs] {
	allArgs := pulumix.All()
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupOrganizationArgs {
		return &LookupOrganizationArgs{}
	})
}

type LookupOrganizationResultOutput struct{ *pulumi.OutputState }

func (LookupOrganizationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrganizationResult)(nil)).Elem()
}

func (o LookupOrganizationResultOutput) ToOutput(context.Context) pulumix.Output[*LookupOrganizationResult] {
	return pulumix.Output[*LookupOrganizationResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupOrganizationResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*LookupOrganizationResult](o, func(v *LookupOrganizationResult) string { return v.Name })
}

func (o LookupOrganizationResultOutput) Org_id() pulumix.Output[string] {
	return pulumix.Apply[*LookupOrganizationResult](o, func(v *LookupOrganizationResult) string { return v.Org_id })
}

func (o LookupOrganizationResultOutput) Slug() pulumix.Output[string] {
	return pulumix.Apply[*LookupOrganizationResult](o, func(v *LookupOrganizationResult) string { return v.Slug })
}
